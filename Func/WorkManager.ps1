function global:WorkManager{
<#-----------------------------------------------------------------------------
【OverView】
-----------------------------------------------------------------------------#>

<#-----------------------------------------------------------------------------
【Prepare】
-----------------------------------------------------------------------------#>
param($WorkDir=(Join-Path (Convert-Path .) \),[Switch]$Auto,[Parameter(ValueFromPipeline)]$Operate=$(
<#-----------------------------------------------------------------------------
[1-1. 選択リスト定義]
-----------------------------------------------------------------------------#>
 "3-1-1. ナビゲートしてもらう",
 "3-1-2. FAQを作成する",
 "3-2-1. 必要なSrcをGetする",
 "3-3-1. WorkCodeを登録する",
 "3-3-2. WorkListをメンテナンスする",
 "3-3-3. Workに取り掛かる"|

ogv -PassThru -Title (($WorkDir) + "WorkManager 次に何をしますか？")),
<#-----------------------------------------------------------------------------
[1-2. 変数定義]
-----------------------------------------------------------------------------#>
 $ProjectCode=$(cd $WorkDir;if((Split-Path ../ -Leaf) -eq "Business") {Split-Path . -Leaf}else{"WorkDirで実行して下さい。"}),
 $NewFAQList=$(if(-not(Test-Path ./FAQList.csv)){Set-Content ./FAQList.csv "Question,Answer,QuestionType,ProjectCode"}), $NewWorkList=$(if(-not(Test-Path ./WorkList.csv)){Set-Content ./WorkList.csv "WorkCode,Freqency,Start,End,isOpen,WorkID,ProjectCode"}),
 
<#-----------------------------------------------------------------------------
【GetSrc】
-----------------------------------------------------------------------------#>
<#-----------------------------------------------------------------------------
[2-1. 読み込みたいList読み込み]
-----------------------------------------------------------------------------#>
 $FAQList=$(ipcsv ./FAQList.csv -Encoding Default),
 $WorkList=$(ipcsv ./WorkList.csv -Encoding Default)
 
)begin{pushd .;cd $WorkDir;(date).ToString()+" :"+$ProjectCode+">"+$WorkCode+">"+(Split-Path -Leaf $PSCommandPath)+" Ready." >> $Log}process{switch($Operate){
<#-----------------------------------------------------------------------------
【3. Custom】
-----------------------------------------------------------------------------#>
<#---------------------------------------------------------------------------#>
"3-1-1. ナビゲートしてもらう"{
<#---------------------------------------------------------------------------#>
"Workは、業務のまとまりです！"
"Project :" +$ProjectCode
pwd
$WorkDir
$WorkList

<#---------------------------------------------------------------------------#>
}"3-1-2. FAQを作成する"{
<#---------------------------------------------------------------------------#>
Add-Content ./FAQList.csv (Read-Host "追加したいFAQを「質問,回答」の形で記入して下さい。")

<#---------------------------------------------------------------------------#>
}"3-2-1. 必要なSrcをGetする"{
<#---------------------------------------------------------------------------#>

<#---------------------------------------------------------------------------#>
}"3-3-1. WorkCodeを登録する"{
<#---------------------------------------------------------------------------#>
$WorkCode=(Read-Host "追加したいWorkCodeを記入して下さい。")
$Frequency=(Read-Host "頻度を記入して下さい。Annual/Monthly/Weekly/Daily/Ireg")
$Start=(Read-Host "業務開始予定日は？(yyyy/MM/dd形式で記入)") 
$End=(Read-Host "業務終了予定日は？(yyyy/MM/dd形式で記入)")
$Status="Open"
$WorkID=$Frequency+"_"+$WorkCode 

Add-Content ./WorkList.csv ($WorkCode+","+$Frequency+","+$Start+","+$End+","+$Status+","+$WorkID+","+$ProjectCode)

#Workディレクトリ作成
mkdir $WorkID

<#---------------------------------------------------------------------------#>
}"3-3-2. WorkListメンテナンス"{
<#---------------------------------------------------------------------------#>
$excel=New-Object -ComObject Excel.Application;$excel.Visible=$true;$excel.DisplayAlerts=$false;$excel.Workbooks.Open((Convert-path ./WorkList.csv))

<#---------------------------------------------------------------------------#>
}"3-3-3. Workに取り掛かる"{
<#---------------------------------------------------------------------------#>
$work=ls -dir -name|ogv -PassThru -Title (($WorkDir) + " 取り掛かるWorkを選択して下さい。")
TicketManager -WorkDir (Join-Path (Convert-Path $Work) \)

<#---------------------------------------------------------------------------#>
}default{
<#---------------------------------------------------------------------------#>
"キャンセルが押されたか、選択メニューに無い！"
}}
<#-----------------------------------------------------------------------------
【4. PostDist】
-----------------------------------------------------------------------------#>
Read-Host "最後にWorkを更新しましょう！" # 過ぎてるやつあったら更新させたい。

if((Read-Host "WorkManager まだ続ける？yes/no") -eq "yes"){WorkManager -WorkDir (Join-Path (Convert-Path .) \)}else{cd $BUSINESS_DIR}
}end{(date).ToString() + " :"+$ProjectCode+">"+$WorkCode+">"+(Split-Path -Leaf $PSCommandPath) + " Finished." >> $Log;popd}}


